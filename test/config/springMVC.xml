<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context-3.0.xsd
  http://www.springframework.org/schema/mvc
  http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
  http://www.springframework.org/schema/util 
  http://www.springframework.org/schema/util/spring-util-3.0.xsd
  ">

	<context:component-scan base-package="com.jty.controller" />

	<mvc:annotation-driven />

	<!-- 页面跳转的路径 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html;charset=UTF-8"/>
	</bean>

	<!-- 上传插件 need commons-fileupload.jar -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="100000000" />
	</bean>



	<!-- 登陆拦截器
	<mvc:interceptors>
		
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="loginInterceptor" class="com.jty.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<util:list id="beanList">
				<ref bean="mappingJacksonHttpMessageConverter" />
			</util:list>
		</property>
	</bean>
	
	<!-- 需要依赖JSON对象的处理JAR包jackson-core-lgpl.jar jackson-mapper-lgpl.jar jackson-core-asl.jar 
		jackson-mapper-asl.jar -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 以下两种方法对静态文件的访问 配置的不起作用，最后交由tomcat处理，在web.xml配置 -->
	<!-- 对静态资源文件的访问 方案一 （二选一） <mvc:default-servlet-handler/> -->
	<!-- 对静态资源文件的访问 方案二 （二选一） -->
	<!--如果spring mvc 配置拦截/的路径，则向下配置spring mvc 不拦截以下资源 <mvc:resources mapping="/css/**" 
		location="/css/"/> <mvc:resources mapping="/js/**" location="/js/"/> -->

</beans>